# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import posetRL_pb2 as posetRL__pb2


class PosetRLServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.applyActionGetEmbeddings = channel.unary_unary(
                '/posetRLgRPC.PosetRLService/applyActionGetEmbeddings',
                request_serializer=posetRL__pb2.ActionRequest.SerializeToString,
                response_deserializer=posetRL__pb2.EmbeddingResponse.FromString,
                )
        self.queryCompiler = channel.unary_unary(
                '/posetRLgRPC.PosetRLService/queryCompiler',
                request_serializer=posetRL__pb2.ActionRequest.SerializeToString,
                response_deserializer=posetRL__pb2.EmbeddingResponse.FromString,
                )
        self.getAdvice = channel.unary_unary(
                '/posetRLgRPC.PosetRLService/getAdvice',
                request_serializer=posetRL__pb2.EmbeddingResponse.SerializeToString,
                response_deserializer=posetRL__pb2.ActionRequest.FromString,
                )


class PosetRLServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def applyActionGetEmbeddings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def queryCompiler(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAdvice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PosetRLServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'applyActionGetEmbeddings': grpc.unary_unary_rpc_method_handler(
                    servicer.applyActionGetEmbeddings,
                    request_deserializer=posetRL__pb2.ActionRequest.FromString,
                    response_serializer=posetRL__pb2.EmbeddingResponse.SerializeToString,
            ),
            'queryCompiler': grpc.unary_unary_rpc_method_handler(
                    servicer.queryCompiler,
                    request_deserializer=posetRL__pb2.ActionRequest.FromString,
                    response_serializer=posetRL__pb2.EmbeddingResponse.SerializeToString,
            ),
            'getAdvice': grpc.unary_unary_rpc_method_handler(
                    servicer.getAdvice,
                    request_deserializer=posetRL__pb2.EmbeddingResponse.FromString,
                    response_serializer=posetRL__pb2.ActionRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'posetRLgRPC.PosetRLService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PosetRLService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def applyActionGetEmbeddings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/posetRLgRPC.PosetRLService/applyActionGetEmbeddings',
            posetRL__pb2.ActionRequest.SerializeToString,
            posetRL__pb2.EmbeddingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def queryCompiler(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/posetRLgRPC.PosetRLService/queryCompiler',
            posetRL__pb2.ActionRequest.SerializeToString,
            posetRL__pb2.EmbeddingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAdvice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/posetRLgRPC.PosetRLService/getAdvice',
            posetRL__pb2.EmbeddingResponse.SerializeToString,
            posetRL__pb2.ActionRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
